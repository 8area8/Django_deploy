version: '3.6'

services:

  django:
    container_name: food_fact
    build: ./django/
    image: django_app
    env_file: .env
    volumes:
      - app_volume:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/public/media
    command: bash -c "python3 manage.py makemigrations --merge && python3 manage.py collectstatic --no-input && gunicorn --bind=0.0.0.0:8000 app.wsgi:application"
    restart: on-failure
    depends_on:
      - redis
    networks:
      - nginx_network
      - redis_network

  nginx:
    container_name: nginx
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/public/media
    restart: on-failure
    depends_on:
      - django
    networks:
      - nginx_network

  celery:
    container_name: celery
    image: django_app
    restart: on-failure
    env_file: '.env'
    command: 'python3 -m celery -A app.celery_settings worker --pool=eventlet -l info'
    volumes:
      - app_volume:/app
    depends_on:
      - django
      - redis
    networks:
      - redis_network

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_volume:/data
    networks:
      - redis_network
  
  cron:
    container_name: cron
    build: ./cron/
    restart: on-failure
    env_file: '.env'
    volumes:
      - app_volume:/app
    command: 'cron && tail -f /var/log/cron.log'
    depends_on:
      - django


networks:
  nginx_network:
    driver: bridge
  redis_network:
    driver: bridge

volumes:
  app_volume:
  static_volume:
  media_volume:
  redis_volume: